# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Run a multi-line script
        run: |
          npm install
          npm run build

      # Runs a single command using the runners shell
      - name: GitHub Pages
        # You may pin to the exact commit or the version.
        # uses: crazy-max/ghaction-github-pages@a117e4aa1fb4854d021546d2abdfac95be568a3a
        uses: crazy-max/ghaction-github-pages@v2.6.0
        with:
          # Git domain (default github.com)
          domain: github.com # optional, default is github.com
          # GitHub repository where assets will be deployed (default $GITHUB_REPOSITORY)
          repo: ProZoneDAO/whitepaper # optional
          # Git branch where assets will be deployed
          target_branch: gh-pages # optional, default is gh-pages
          # Create incremental commit instead of doing push force
          keep_history: true # optional, default is false
          # Allow an empty commit to be created
          allow_empty_commit: true # optional, default is true
          # Build directory to deploy
          build_dir: build
          # Whether to treat build_dir as an absolute path
          absolute_build_dir: false # optional, default is false
          # If enabled, the content of symbolic links will be copied
          follow_symlinks: false # optional, default is false
          # The committer name and email address
          #committer: name # optional
          # The author name and email address
          #author: admin@xyz.com # optional
          # Commit message
          commit_message: published # optional
          # Write the given domain name to the CNAME file
          jekyll: false # optional, default is true
          # If enabled, nothing will be pushed
          dry_run: false # optional, default is false
          # Enable verbose output
          verbose: true # optional, default is false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
